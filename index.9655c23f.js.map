{"mappings":"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","sources":["src/elements/base-element.ts","src/elements/base-movable-element.ts","src/elements/ball.ts","src/elements/brick.ts","src/elements/paddle.ts","src/constants.ts","src/elements/bricks.ts","src/elements/score-board.ts","src/breakout-game.ts","src/circle-rectangle-colliding.ts","src/levels/index.ts","src/levels/first.ts","src/levels/second.ts","src/levels/third.ts","src/levels/fourth.ts","src/levels/fifth.ts","src/index.ts"],"sourcesContent":["import { Point } from '../types';\n\nabstract class BaseElement {\n    protected ctx: CanvasRenderingContext2D;\n\n    protected position: Point;\n\n    protected color: string;\n\n    constructor(ctx: CanvasRenderingContext2D, position: Point, color: string) {\n        this.ctx = ctx;\n        this.position = position;\n        this.color = color;\n    }\n\n    public abstract draw(): void;\n\n    get x(): number {\n        return this.position.x;\n    }\n\n    get y(): number {\n        return this.position.y;\n    }\n}\n\nexport default BaseElement;\n","import BaseElement from './base-element';\nimport { Point } from '../types';\n\nabstract class BaseMovableElement extends BaseElement {\n    public setPosition(position: Point) {\n        this.position = position;\n    }\n\n    public setX(x: number) {\n        this.position.x = x;\n    }\n\n    public setY(y: number) {\n        this.position.y = y;\n    }\n}\n\nexport default BaseMovableElement;\n","import BaseMovableElement from './base-movable-element';\nimport { Point } from '../types';\n\ntype BallOptions = {\n    x: number;\n    y: number;\n    deltaX: number;\n    deltaY: number;\n    color: string;\n    radius: number;\n};\n\nclass Ball extends BaseMovableElement {\n    private delta: Point;\n\n    public radius: number;\n\n    constructor(\n        ctx: CanvasRenderingContext2D,\n        { x, y, deltaX, deltaY, color, radius }: BallOptions\n    ) {\n        super(ctx, { x, y }, color);\n        this.delta = { x: deltaX, y: deltaY };\n        this.radius = radius;\n    }\n\n    public draw() {\n        this.ctx.beginPath();\n        this.ctx.arc(\n            this.position.x,\n            this.position.y,\n            this.radius,\n            0,\n            Math.PI * 2\n        );\n        this.ctx.fillStyle = this.color;\n        this.ctx.fill();\n        this.ctx.closePath();\n    }\n\n    public setDelta(delta: Point) {\n        this.delta = delta;\n    }\n\n    get deltaX(): number {\n        return this.delta.x;\n    }\n\n    get deltaY(): number {\n        return this.delta.y;\n    }\n\n    public invertDeltaX() {\n        this.delta.x = -this.delta.x;\n    }\n\n    public invertDeltaY() {\n        this.delta.y = -this.delta.y;\n    }\n\n    public move() {\n        this.position = {\n            x: this.position.x + this.delta.x,\n            y: this.position.y + this.delta.y,\n        };\n    }\n}\n\nexport default Ball;\n","import BaseElement from './base-element';\nimport { Point, Size } from '../types';\n\nexport enum BrickStatus {\n    UnBroken,\n    Broken,\n}\n\nexport type BrickOptions = Point &\n    Size & {\n        color: string;\n    };\n\nclass Brick extends BaseElement {\n    private size: Size;\n\n    private status: BrickStatus;\n\n    constructor(\n        ctx: CanvasRenderingContext2D,\n        { x, y, width, height, color }: BrickOptions\n    ) {\n        super(ctx, { x, y }, color);\n        this.size = { width, height };\n        this.status = BrickStatus.UnBroken;\n    }\n\n    public draw() {\n        this.ctx.beginPath();\n        this.ctx.rect(\n            this.position.x,\n            this.position.y,\n            this.size.width,\n            this.size.height\n        );\n        this.ctx.fillStyle = this.color;\n        this.ctx.fill();\n        this.ctx.closePath();\n    }\n\n    public getStatus() {\n        return this.status;\n    }\n\n    public destroy() {\n        this.status = BrickStatus.Broken;\n    }\n\n    get width(): number {\n        return this.size.width;\n    }\n\n    get height(): number {\n        return this.size.height;\n    }\n}\n\nexport default Brick;\n","import BaseMovableElement from './base-movable-element';\nimport { gameWidth } from '../constants';\nimport { Point, Size } from '../types';\n\ntype PaddleOptions = Point &\n    Size & {\n        shift: number;\n        color: string;\n    };\n\nclass Paddle extends BaseMovableElement {\n    private size: Size;\n\n    private shift: number;\n\n    constructor(\n        ctx: CanvasRenderingContext2D,\n        { x, y, width, height, shift, color }: PaddleOptions\n    ) {\n        super(ctx, { x, y }, color);\n        this.size = { width, height };\n        this.shift = shift;\n    }\n\n    public draw() {\n        this.ctx.beginPath();\n        this.ctx.rect(\n            this.position.x,\n            this.position.y,\n            this.size.width,\n            this.size.height\n        );\n        this.ctx.fillStyle = this.color;\n        this.ctx.fill();\n        this.ctx.closePath();\n    }\n\n    public moveLeft() {\n        this.position.x -= this.shift;\n        if (this.position.x < 0) {\n            this.position.x = 0;\n        }\n    }\n\n    public moveRight() {\n        this.position.x += this.shift;\n        if (this.position.x + this.size.width > gameWidth) {\n            this.position.x = gameWidth - this.size.width;\n        }\n    }\n\n    public setShift(shift: number) {\n        this.shift = shift;\n    }\n\n    public setSize(size: Size) {\n        this.size = size;\n    }\n\n    get width(): number {\n        return this.size.width;\n    }\n\n    get height(): number {\n        return this.size.height;\n    }\n}\n\nexport default Paddle;\n","export const blue = '#0095DD';\n\nexport const font = '16px Arial';\n\nexport const arrowRight = 39;\nexport const arrowLeft = 37;\nexport const space = 32;\n\nexport const gameWidth = 480;\nexport const gameHeight = 320;\n","import Brick, { BrickStatus, BrickOptions } from './brick';\n\nclass Bricks {\n    private items: Brick[];\n\n    constructor(ctx: CanvasRenderingContext2D, bricksOptions: BrickOptions[]) {\n        this.items = bricksOptions.map((options) => new Brick(ctx, options));\n    }\n\n    public draw() {\n        for (let idx = 0; idx < this.items.length; idx++) {\n            const brick = this.items[idx];\n\n            if (brick.getStatus() === BrickStatus.Broken) {\n                continue;\n            }\n\n            brick.draw();\n        }\n    }\n\n    public getItems() {\n        return this.items;\n    }\n\n    public allBroken() {\n        return this.items.every(\n            (brick) => brick.getStatus() === BrickStatus.Broken\n        );\n    }\n}\n\nexport default Bricks;\n","import BaseElement from './base-element';\nimport { Point } from '../types';\n\nclass ScoreBoard extends BaseElement {\n    private font: string;\n\n    private label: string;\n\n    private value: number;\n\n    constructor(\n        ctx: CanvasRenderingContext2D,\n        position: Point,\n        color: string,\n        font: string,\n        label: string,\n        value: number\n    ) {\n        super(ctx, position, color);\n\n        this.font = font;\n        this.label = label;\n        this.value = value;\n    }\n\n    public draw() {\n        this.ctx.font = this.font;\n        this.ctx.fillStyle = this.color;\n        this.ctx.fillText(\n            `${this.label}: ${this.value}`,\n            this.position.x,\n            this.position.y\n        );\n    }\n\n    public getValue(): number {\n        return this.value;\n    }\n\n    public increase() {\n        this.value += 1;\n    }\n\n    public descrease() {\n        this.value -= 1;\n    }\n}\n\nexport default ScoreBoard;\n","import Ball from './elements/ball';\nimport Paddle from './elements/paddle';\nimport { BrickStatus } from './elements/brick';\nimport Bricks from './elements/bricks';\nimport ScoreBoard from './elements/score-board';\nimport { Level } from './types';\nimport circleRectangleColliding from './circle-rectangle-colliding';\nimport {\n    blue,\n    font,\n    arrowRight,\n    arrowLeft,\n    space,\n    gameWidth,\n    gameHeight,\n} from './constants';\n\nexport enum GameStatus {\n    Pause,\n    Active,\n    Win,\n    GameOver,\n}\n\nclass BreakoutGame {\n    private ctx: CanvasRenderingContext2D;\n\n    private scaleIndex: number;\n\n    private levels: Level[];\n\n    private ball: Ball;\n\n    private paddle: Paddle;\n\n    private bricks: Bricks;\n\n    private score: ScoreBoard;\n\n    private level: ScoreBoard;\n\n    private lives: ScoreBoard;\n\n    public status: GameStatus;\n\n    private isRightArrowPressed: boolean;\n\n    private isLeftArrowPressed: boolean;\n\n    constructor(\n        ctx: CanvasRenderingContext2D,\n        scaleIndex: number,\n        levels: Level[]\n    ) {\n        this.ctx = ctx;\n        this.scaleIndex = scaleIndex;\n        this.levels = levels;\n\n        this.scaleCanvas();\n\n        this.score = new ScoreBoard(\n            ctx,\n            { x: 8, y: 20 },\n            blue,\n            font,\n            'Score',\n            0\n        );\n\n        this.level = new ScoreBoard(\n            ctx,\n            { x: this.width / 2 - 25, y: 20 },\n            blue,\n            font,\n            'Level',\n            1\n        );\n\n        this.lives = new ScoreBoard(\n            ctx,\n            { x: this.width - 65, y: 20 },\n            blue,\n            font,\n            'Lives',\n            3\n        );\n\n        this.ball = new Ball(ctx, {\n            x: this.width / 2,\n            y: this.height - 30,\n            deltaX: this.currentLevelOptions.ballSpeed,\n            deltaY: -this.currentLevelOptions.ballSpeed,\n            color: blue,\n            radius: 10,\n        });\n\n        this.paddle = new Paddle(ctx, {\n            x: (this.width - this.currentLevelOptions.paddleSize.width) / 2,\n            y: this.height - this.currentLevelOptions.paddleSize.height,\n            width: this.currentLevelOptions.paddleSize.width,\n            height: this.currentLevelOptions.paddleSize.height,\n            shift: this.currentLevelOptions.paddleSpeed,\n            color: blue,\n        });\n\n        this.bricks = new Bricks(ctx, this.currentLevelOptions.bricks);\n\n        this.status = GameStatus.Pause;\n\n        this.isRightArrowPressed = false;\n        this.isLeftArrowPressed = false;\n\n        this.activateControls();\n    }\n\n    private scaleCanvas() {\n        this.ctx.canvas.width = gameWidth * this.scaleIndex;\n        this.ctx.canvas.height = gameHeight * this.scaleIndex;\n\n        this.ctx.canvas.setAttribute(\n            'style',\n            `width: ${gameWidth}px; height: ${gameHeight};`\n        );\n\n        this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n        this.ctx.scale(this.scaleIndex, this.scaleIndex);\n    }\n\n    private get currentLevelOptions() {\n        return this.levels[this.level.getValue() - 1];\n    }\n\n    private get width() {\n        return this.ctx.canvas.width / this.scaleIndex;\n    }\n\n    private get height() {\n        return this.ctx.canvas.height / this.scaleIndex;\n    }\n\n    private activateControls() {\n        const keyDownHandler = (e: KeyboardEvent) => {\n            if (e.keyCode === arrowRight) {\n                this.isRightArrowPressed = true;\n                if (this.status === GameStatus.Pause) {\n                    this.continue();\n                }\n            } else if (e.keyCode === arrowLeft) {\n                this.isLeftArrowPressed = true;\n                if (this.status === GameStatus.Pause) {\n                    this.continue();\n                }\n            } else if (e.keyCode === space) {\n                if (this.status === GameStatus.Pause) {\n                    this.continue();\n                } else if (this.status === GameStatus.Active) {\n                    this.pause();\n                }\n            }\n        };\n\n        const keyUpHandler = (e: KeyboardEvent) => {\n            if (e.keyCode === arrowRight) {\n                this.isRightArrowPressed = false;\n            } else if (e.keyCode === arrowLeft) {\n                this.isLeftArrowPressed = false;\n            }\n        };\n\n        document.addEventListener('keydown', keyDownHandler);\n        document.addEventListener('keyup', keyUpHandler);\n    }\n\n    private pause() {\n        this.status = GameStatus.Pause;\n    }\n\n    private continue() {\n        this.status = GameStatus.Active;\n    }\n\n    public play() {\n        this.cleanCanvas();\n\n        this.draw();\n\n        if (this.status === GameStatus.Pause) {\n            return;\n        }\n\n        this.detectBallCollisionWithBricks();\n\n        this.detectBallCollistionWithPaddleAndBorders();\n\n        this.moveElements();\n    }\n\n    private cleanCanvas() {\n        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n    }\n\n    private draw() {\n        this.bricks.draw();\n        this.ball.draw();\n        this.paddle.draw();\n        this.score.draw();\n        this.level.draw();\n        this.lives.draw();\n    }\n\n    private detectBallCollisionWithBricks() {\n        let shouldChangeBallDirection = false;\n        const bricks = this.bricks.getItems();\n\n        for (let idx = 0; idx < bricks.length; idx++) {\n            const brick = bricks[idx];\n\n            if (brick.getStatus() === BrickStatus.Broken) {\n                continue;\n            }\n\n            if (circleRectangleColliding(this.ball, brick)) {\n                shouldChangeBallDirection = true;\n                brick.destroy();\n                this.score.increase();\n            }\n        }\n\n        if (shouldChangeBallDirection) {\n            this.ball.invertDeltaY();\n        }\n\n        if (this.bricks.allBroken()) {\n            this.upLevel();\n        }\n    }\n\n    private upLevel() {\n        if (this.level.getValue() === this.levels.length) {\n            this.status = GameStatus.Win;\n        } else {\n            this.level.increase();\n\n            this.bricks = new Bricks(this.ctx, this.currentLevelOptions.bricks);\n\n            this.pause();\n\n            this.setBallToInitialPosition();\n\n            this.paddle.setSize(this.currentLevelOptions.paddleSize);\n            this.paddle.setShift(this.currentLevelOptions.paddleSpeed);\n            this.setPaddleToInitialPosition();\n        }\n    }\n\n    private detectBallCollistionWithPaddleAndBorders() {\n        if (this.ballReachedLeft() || this.ballReachedRight()) {\n            this.ball.invertDeltaX();\n        }\n\n        if (this.ballReachedTop() || this.ballReachedPaddle()) {\n            this.ball.invertDeltaY();\n        }\n\n        if (this.ballReachedBottom()) {\n            this.attemptIsOver();\n        }\n    }\n\n    private ballReachedLeft(): boolean {\n        return this.ball.x + this.ball.deltaX < this.ball.radius;\n    }\n\n    private ballReachedRight(): boolean {\n        return this.ball.x + this.ball.deltaX > this.width - this.ball.radius;\n    }\n\n    private ballReachedTop(): boolean {\n        return this.ball.y + this.ball.deltaY < this.ball.radius;\n    }\n\n    private ballReachedBottom(): boolean {\n        return this.ball.y + this.ball.deltaY > this.height - this.ball.radius;\n    }\n\n    private ballReachedPaddle(): boolean {\n        return circleRectangleColliding(this.ball, this.paddle);\n    }\n\n    private attemptIsOver() {\n        this.lives.descrease();\n        if (!this.lives.getValue()) {\n            this.status = GameStatus.GameOver;\n        } else {\n            this.pause();\n\n            this.setBallToInitialPosition();\n\n            this.setPaddleToInitialPosition();\n        }\n    }\n\n    private setBallToInitialPosition() {\n        this.ball.setPosition({\n            x: this.width / 2,\n            y: this.height - 30,\n        });\n        this.ball.setDelta({\n            x: this.currentLevelOptions.ballSpeed,\n            y: -this.currentLevelOptions.ballSpeed,\n        });\n    }\n\n    private setPaddleToInitialPosition() {\n        this.paddle.setX((this.width - this.paddle.width) / 2);\n    }\n\n    private moveElements() {\n        if (this.isRightArrowPressed) {\n            this.paddle.moveRight();\n        }\n\n        if (this.isLeftArrowPressed) {\n            this.paddle.moveLeft();\n        }\n\n        this.ball.move();\n    }\n}\n\nexport default BreakoutGame;\n","interface Circle {\n    x: number;\n    y: number;\n    radius: number;\n}\n\ninterface Rectangle {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\nconst circleRectangleColliding = (circle: Circle, rect: Rectangle): boolean => {\n    const distX = Math.abs(circle.x - rect.x - rect.width / 2);\n    const distY = Math.abs(circle.y - rect.y - rect.height / 2);\n\n    if (distX > rect.width / 2 + circle.radius) {\n        return false;\n    }\n    if (distY > rect.height / 2 + circle.radius) {\n        return false;\n    }\n\n    if (distX <= rect.width / 2) {\n        return true;\n    }\n    if (distY <= rect.height / 2) {\n        return true;\n    }\n\n    const dx = distX - rect.width / 2;\n    const dy = distY - rect.height / 2;\n\n    return dx ** 2 + dy ** 2 <= circle.radius ** 2;\n};\n\nexport default circleRectangleColliding;\n","import first from './first';\nimport second from './second';\nimport third from './third';\nimport fourth from './fourth';\nimport fifth from './fifth';\nimport { Level } from '../types';\n\nconst levels: Level[] = [first, second, third, fourth, fifth];\n\nexport default levels;\n","import { blue } from '../constants';\nimport { Level } from '../types';\n\nconst firstLevel: Level = {\n    ballSpeed: 2,\n    paddleSpeed: 7,\n    paddleSize: {\n        width: 75,\n        height: 15,\n    },\n    bricks: [\n        {\n            x: 30,\n            y: 30,\n            color: blue,\n            width: 75,\n            height: 20,\n        },\n        {\n            x: 30,\n            y: 60,\n            color: blue,\n            width: 75,\n            height: 20,\n        },\n        {\n            x: 30,\n            y: 90,\n            color: blue,\n            width: 75,\n            height: 20,\n        },\n        {\n            x: 115,\n            y: 30,\n            color: blue,\n            width: 75,\n            height: 20,\n        },\n        {\n            x: 115,\n            y: 60,\n            color: blue,\n            width: 75,\n            height: 20,\n        },\n        {\n            x: 115,\n            y: 90,\n            color: blue,\n            width: 75,\n            height: 20,\n        },\n        {\n            x: 200,\n            y: 30,\n            color: blue,\n            width: 75,\n            height: 20,\n        },\n        {\n            x: 200,\n            y: 60,\n            color: blue,\n            width: 75,\n            height: 20,\n        },\n        {\n            x: 200,\n            y: 90,\n            color: blue,\n            width: 75,\n            height: 20,\n        },\n        {\n            x: 285,\n            y: 30,\n            color: blue,\n            width: 75,\n            height: 20,\n        },\n        {\n            x: 285,\n            y: 60,\n            color: blue,\n            width: 75,\n            height: 20,\n        },\n        {\n            x: 285,\n            y: 90,\n            color: blue,\n            width: 75,\n            height: 20,\n        },\n        {\n            x: 370,\n            y: 30,\n            color: blue,\n            width: 75,\n            height: 20,\n        },\n        {\n            x: 370,\n            y: 60,\n            color: blue,\n            width: 75,\n            height: 20,\n        },\n        {\n            x: 370,\n            y: 90,\n            color: blue,\n            width: 75,\n            height: 20,\n        },\n    ],\n};\n\nexport default firstLevel;\n","import { blue } from '../constants';\nimport { Level } from '../types';\n\nconst secondLevel: Level = {\n    ballSpeed: 2.2,\n    paddleSpeed: 7.2,\n    paddleSize: {\n        width: 65,\n        height: 15,\n    },\n    bricks: [\n        {\n            x: 30,\n            y: 30,\n            color: blue,\n            width: 80,\n            height: 20,\n        },\n        {\n            x: 120,\n            y: 30,\n            color: blue,\n            width: 20,\n            height: 20,\n        },\n        {\n            x: 150,\n            y: 30,\n            color: blue,\n            width: 80,\n            height: 20,\n        },\n        {\n            x: 240,\n            y: 30,\n            color: blue,\n            width: 20,\n            height: 20,\n        },\n        {\n            x: 270,\n            y: 30,\n            color: blue,\n            width: 80,\n            height: 20,\n        },\n        {\n            x: 360,\n            y: 30,\n            color: blue,\n            width: 20,\n            height: 20,\n        },\n        {\n            x: 390,\n            y: 30,\n            color: blue,\n            width: 70,\n            height: 20,\n        },\n        {\n            x: 30,\n            y: 60,\n            color: blue,\n            width: 20,\n            height: 20,\n        },\n        {\n            x: 60,\n            y: 60,\n            color: blue,\n            width: 80,\n            height: 20,\n        },\n        {\n            x: 150,\n            y: 60,\n            color: blue,\n            width: 20,\n            height: 20,\n        },\n        {\n            x: 180,\n            y: 60,\n            color: blue,\n            width: 80,\n            height: 20,\n        },\n        {\n            x: 270,\n            y: 60,\n            color: blue,\n            width: 20,\n            height: 20,\n        },\n        {\n            x: 300,\n            y: 60,\n            color: blue,\n            width: 80,\n            height: 20,\n        },\n        {\n            x: 390,\n            y: 60,\n            color: blue,\n            width: 20,\n            height: 20,\n        },\n        {\n            x: 420,\n            y: 60,\n            color: blue,\n            width: 40,\n            height: 20,\n        },\n        {\n            x: 30,\n            y: 90,\n            color: blue,\n            width: 80,\n            height: 20,\n        },\n        {\n            x: 120,\n            y: 90,\n            color: blue,\n            width: 20,\n            height: 20,\n        },\n        {\n            x: 150,\n            y: 90,\n            color: blue,\n            width: 80,\n            height: 20,\n        },\n        {\n            x: 240,\n            y: 90,\n            color: blue,\n            width: 20,\n            height: 20,\n        },\n        {\n            x: 270,\n            y: 90,\n            color: blue,\n            width: 80,\n            height: 20,\n        },\n        {\n            x: 360,\n            y: 90,\n            color: blue,\n            width: 20,\n            height: 20,\n        },\n        {\n            x: 390,\n            y: 90,\n            color: blue,\n            width: 70,\n            height: 20,\n        },\n    ],\n};\n\nexport default secondLevel;\n","import { blue } from '../constants';\nimport { Level } from '../types';\n\nconst thirdLevel: Level = {\n    ballSpeed: 2.4,\n    paddleSpeed: 7.4,\n    paddleSize: {\n        width: 55,\n        height: 15,\n    },\n    bricks: [\n        {\n            x: 215,\n            y: 30,\n            color: blue,\n            width: 50,\n            height: 20,\n        },\n        {\n            x: 200,\n            y: 60,\n            color: blue,\n            width: 80,\n            height: 20,\n        },\n        {\n            x: 180,\n            y: 90,\n            color: blue,\n            width: 120,\n            height: 20,\n        },\n        {\n            x: 200,\n            y: 120,\n            color: blue,\n            width: 80,\n            height: 20,\n        },\n        {\n            x: 215,\n            y: 150,\n            color: blue,\n            width: 50,\n            height: 20,\n        },\n        {\n            x: 50,\n            y: 65,\n            color: blue,\n            width: 50,\n            height: 20,\n        },\n        {\n            x: 110,\n            y: 85,\n            color: blue,\n            width: 20,\n            height: 30,\n        },\n        {\n            x: 50,\n            y: 115,\n            color: blue,\n            width: 50,\n            height: 20,\n        },\n        {\n            x: 20,\n            y: 85,\n            color: blue,\n            width: 20,\n            height: 30,\n        },\n        {\n            x: 380,\n            y: 65,\n            color: blue,\n            width: 50,\n            height: 20,\n        },\n        {\n            x: 350,\n            y: 85,\n            color: blue,\n            width: 20,\n            height: 30,\n        },\n        {\n            x: 380,\n            y: 115,\n            color: blue,\n            width: 50,\n            height: 20,\n        },\n        {\n            x: 440,\n            y: 85,\n            color: blue,\n            width: 20,\n            height: 30,\n        },\n    ],\n};\n\nexport default thirdLevel;\n","import { blue } from '../constants';\nimport { Level } from '../types';\n\nconst fourthLevel: Level = {\n    ballSpeed: 2.6,\n    paddleSpeed: 7.6,\n    paddleSize: {\n        width: 45,\n        height: 15,\n    },\n    bricks: [\n        {\n            x: 30,\n            y: 30,\n            color: blue,\n            width: 75,\n            height: 20,\n        },\n        {\n            x: 115,\n            y: 30,\n            color: blue,\n            width: 75,\n            height: 20,\n        },\n        {\n            x: 200,\n            y: 30,\n            color: blue,\n            width: 75,\n            height: 20,\n        },\n        {\n            x: 285,\n            y: 30,\n            color: blue,\n            width: 75,\n            height: 20,\n        },\n        {\n            x: 370,\n            y: 30,\n            color: blue,\n            width: 75,\n            height: 20,\n        },\n        {\n            x: 30,\n            y: 60,\n            color: blue,\n            width: 47,\n            height: 20,\n        },\n        {\n            x: 92,\n            y: 60,\n            color: blue,\n            width: 47,\n            height: 20,\n        },\n        {\n            x: 154,\n            y: 60,\n            color: blue,\n            width: 47,\n            height: 20,\n        },\n        {\n            x: 216,\n            y: 60,\n            color: blue,\n            width: 47,\n            height: 20,\n        },\n        {\n            x: 278,\n            y: 60,\n            color: blue,\n            width: 47,\n            height: 20,\n        },\n        {\n            x: 340,\n            y: 60,\n            color: blue,\n            width: 47,\n            height: 20,\n        },\n        {\n            x: 402,\n            y: 60,\n            color: blue,\n            width: 42,\n            height: 20,\n        },\n        {\n            x: 30,\n            y: 90,\n            color: blue,\n            width: 20,\n            height: 20,\n        },\n        {\n            x: 60,\n            y: 90,\n            color: blue,\n            width: 20,\n            height: 20,\n        },\n        {\n            x: 90,\n            y: 90,\n            color: blue,\n            width: 20,\n            height: 20,\n        },\n        {\n            x: 120,\n            y: 90,\n            color: blue,\n            width: 20,\n            height: 20,\n        },\n\n        {\n            x: 150,\n            y: 90,\n            color: blue,\n            width: 20,\n            height: 20,\n        },\n        {\n            x: 180,\n            y: 90,\n            color: blue,\n            width: 20,\n            height: 20,\n        },\n        {\n            x: 210,\n            y: 90,\n            color: blue,\n            width: 20,\n            height: 20,\n        },\n        {\n            x: 240,\n            y: 90,\n            color: blue,\n            width: 20,\n            height: 20,\n        },\n        {\n            x: 270,\n            y: 90,\n            color: blue,\n            width: 20,\n            height: 20,\n        },\n        {\n            x: 300,\n            y: 90,\n            color: blue,\n            width: 20,\n            height: 20,\n        },\n        {\n            x: 330,\n            y: 90,\n            color: blue,\n            width: 20,\n            height: 20,\n        },\n        {\n            x: 360,\n            y: 90,\n            color: blue,\n            width: 20,\n            height: 20,\n        },\n        {\n            x: 390,\n            y: 90,\n            color: blue,\n            width: 20,\n            height: 20,\n        },\n        {\n            x: 420,\n            y: 90,\n            color: blue,\n            width: 20,\n            height: 20,\n        },\n    ],\n};\n\nexport default fourthLevel;\n","import { blue } from '../constants';\nimport { Level } from '../types';\n\nconst fifthLevel: Level = {\n    ballSpeed: 2.8,\n    paddleSpeed: 8,\n    paddleSize: {\n        width: 35,\n        height: 15,\n    },\n    bricks: [\n        {\n            x: 30,\n            y: 30,\n            color: blue,\n            width: 20,\n            height: 20,\n        },\n        {\n            x: 60,\n            y: 30,\n            color: blue,\n            width: 20,\n            height: 20,\n        },\n        {\n            x: 90,\n            y: 30,\n            color: blue,\n            width: 20,\n            height: 20,\n        },\n        {\n            x: 120,\n            y: 30,\n            color: blue,\n            width: 20,\n            height: 20,\n        },\n        {\n            x: 150,\n            y: 30,\n            color: blue,\n            width: 20,\n            height: 20,\n        },\n        {\n            x: 180,\n            y: 30,\n            color: blue,\n            width: 20,\n            height: 20,\n        },\n        {\n            x: 210,\n            y: 30,\n            color: blue,\n            width: 20,\n            height: 20,\n        },\n        {\n            x: 240,\n            y: 30,\n            color: blue,\n            width: 20,\n            height: 20,\n        },\n        {\n            x: 270,\n            y: 30,\n            color: blue,\n            width: 20,\n            height: 20,\n        },\n        {\n            x: 300,\n            y: 30,\n            color: blue,\n            width: 20,\n            height: 20,\n        },\n        {\n            x: 330,\n            y: 30,\n            color: blue,\n            width: 20,\n            height: 20,\n        },\n        {\n            x: 360,\n            y: 30,\n            color: blue,\n            width: 20,\n            height: 20,\n        },\n        {\n            x: 390,\n            y: 30,\n            color: blue,\n            width: 20,\n            height: 20,\n        },\n        {\n            x: 420,\n            y: 30,\n            color: blue,\n            width: 20,\n            height: 20,\n        },\n        {\n            x: 30,\n            y: 60,\n            color: blue,\n            width: 50,\n            height: 20,\n        },\n        {\n            x: 90,\n            y: 60,\n            color: blue,\n            width: 50,\n            height: 20,\n        },\n        {\n            x: 150,\n            y: 60,\n            color: blue,\n            width: 50,\n            height: 20,\n        },\n        {\n            x: 210,\n            y: 60,\n            color: blue,\n            width: 50,\n            height: 20,\n        },\n        {\n            x: 270,\n            y: 60,\n            color: blue,\n            width: 50,\n            height: 20,\n        },\n        {\n            x: 330,\n            y: 60,\n            color: blue,\n            width: 50,\n            height: 20,\n        },\n        {\n            x: 390,\n            y: 60,\n            color: blue,\n            width: 50,\n            height: 20,\n        },\n        {\n            x: 30,\n            y: 90,\n            color: blue,\n            width: 30,\n            height: 20,\n        },\n        {\n            x: 75,\n            y: 90,\n            color: blue,\n            width: 30,\n            height: 20,\n        },\n        {\n            x: 120,\n            y: 90,\n            color: blue,\n            width: 30,\n            height: 20,\n        },\n        {\n            x: 160,\n            y: 90,\n            color: blue,\n            width: 30,\n            height: 20,\n        },\n        {\n            x: 200,\n            y: 90,\n            color: blue,\n            width: 30,\n            height: 20,\n        },\n        {\n            x: 240,\n            y: 90,\n            color: blue,\n            width: 30,\n            height: 20,\n        },\n        {\n            x: 280,\n            y: 90,\n            color: blue,\n            width: 30,\n            height: 20,\n        },\n        {\n            x: 320,\n            y: 90,\n            color: blue,\n            width: 30,\n            height: 20,\n        },\n\n        {\n            x: 360,\n            y: 90,\n            color: blue,\n            width: 30,\n            height: 20,\n        },\n        {\n            x: 400,\n            y: 90,\n            color: blue,\n            width: 40,\n            height: 20,\n        },\n    ],\n};\n\nexport default fifthLevel;\n","import BreakoutGame, { GameStatus } from './breakout-game';\nimport levels from './levels';\n\nconst canvas = document.querySelector<HTMLCanvasElement>('#gameCanvas')!;\nconst ctx = canvas.getContext('2d')!;\n\nconst scaleIndex = window.devicePixelRatio;\n\nconst game = new BreakoutGame(ctx, scaleIndex, levels);\n\nconst draw = () => {\n    game.play();\n\n    if (game.status === GameStatus.Win) {\n        alert('YOU WIN, CONGRATULATIONS!');\n        document.location.reload();\n        return;\n    }\n\n    if (game.status === GameStatus.GameOver) {\n        alert('GAME OVER');\n        document.location.reload();\n        return;\n    }\n\n    requestAnimationFrame(draw);\n};\n\ndraw();\n"],"names":["$d1babffaec3c5db5$export$2e2bcd8739ae039","x","this","position","y","ctx","color","$17cd54a3604f9d11$export$2e2bcd8739ae039","setPosition","setX","setY","$34df5d2d4c6c356d$export$2e2bcd8739ae039","draw","beginPath","arc","radius","Math","PI","fillStyle","fill","closePath","setDelta","delta","deltaX","deltaY","invertDeltaX","invertDeltaY","move","super","BrickStatus","$f44c3a5156da6a0e$export$2e2bcd8739ae039","rect","size","width","height","moveLeft","shift","moveRight","setShift","setSize","shift1","$0b0df6af97e0447f$export$c249987d8bef997a","$0b0df6af97e0447f$export$2e2bcd8739ae039","getStatus","status","destroy","Broken","UnBroken","$4c2f9da5045efb48$export$2e2bcd8739ae039","idx","items","length","brick","getItems","allBroken","every","bricksOptions","map","options","$18d6d76271470509$export$2e2bcd8739ae039","font","fillText","label","value","getValue","increase","descrease","GameStatus","$19f58885e2c6e9dc$export$2e2bcd8739ae039","circle","distX","abs","distY","$7ce6f070dc5ced48$export$23c7328964450bd2","$df634aa29dc73d6a$export$2e2bcd8739ae039","ballSpeed","paddleSpeed","paddleSize","bricks","$1e6a16da88d577c6$var$game","scaleCanvas","canvas","scaleIndex","setAttribute","setTransform","scale","currentLevelOptions","levels","level","activateControls","document","addEventListener","e","keyCode","isRightArrowPressed","Pause","continue","isLeftArrowPressed","Active","pause","play","cleanCanvas","detectBallCollisionWithBricks","detectBallCollistionWithPaddleAndBorders","moveElements","clearRect","ball","paddle","score","lives","shouldChangeBallDirection","upLevel","Win","setBallToInitialPosition","setPaddleToInitialPosition","ballReachedLeft","ballReachedRight","ballReachedTop","ballReachedPaddle","ballReachedBottom","attemptIsOver","GameOver","querySelector","getContext","window","devicePixelRatio","$1e6a16da88d577c6$var$draw","alert","location","reload","requestAnimationFrame"],"version":3,"file":"index.9655c23f.js.map"}